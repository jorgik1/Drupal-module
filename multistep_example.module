<?php

/**
 * hook_menu().
 */
function multistep_example_menu() { 
  $items = array(); 
  $items['multistep_example'] = array(
    'title' => '3 шаговая форма с ajax переключением',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multistep_example_form'),
    'access callback' => TRUE,
  );
  return $items;
}

function multistep_example_form($form, &$form_state) {

  // Обёртка для формы. Каждый раз в неё будет передаваться новая форма через ajax.
  $form['#prefix'] = '<div id="multistep-example-form-wrapper">';
  $form['#suffix'] = '</div>';
  
  // Данные в форме будут представлены в виде дерева, т.е. 
  // сохранять ключи родительских элементов.
  $form['#tree'] = TRUE;

  // Если форма только что была создана, то мы окажемся на первом шаге.
  // Если же пользователь уже "полазил" по форме, то забираем текущий шаг формы.
  $step = empty($form_state['storage']['step']) ? 1 : $form_state['storage']['step'];
  $form_state['storage']['step'] = $step;

  // Смотрим, на каком шаге мы сейчас находимся, и в зависимости
  // от этого показываем или скрываем часть формы.
  switch ($step) {
    case 1:
  
      // Если на первом шаге - показываем форму для первого шага.
      $form['step1'] = array(
        '#type' => 'fieldset', 
        '#title' => 'Шаг первый. Выбор возраста и пола.',
      );
      
      $form['step1']['age'] = array(
        '#type' => 'select', 
        '#title' => 'Выберите ваш возраст', 
        '#options' => drupal_map_assoc(array('10-25', '26-50', '51-76', '77-123')),
        '#field_suffix' => 'лет',
      );
      // Если этот шаг уже был пройден, то в форме должно сохраниться значение, которое выбрал пользователь.
      // Если же такого значения нет, то указываем возраст по умолчанию.
      if (isset($form_state['values']['step1']['age'])) {
        $form['step1']['age']['#default_value'] = $form_state['values']['step1']['age'];
      }
      
      $form['step1']['sex'] = array(
        '#type' => 'select', 
        '#title' => 'Укажите ваш пол', 
        '#options' => drupal_map_assoc(array('Не определён', 'Мужской', 'Женский')),
      );
      // То же самое, что и для возраста. Если значение уже указывалось - подтягиваем его.
      // Если нет - задаём своё.
      if (isset($form_state['values']['step1']['sex'])) {
        $form['step1']['sex']['#default_value'] = $form_state['values']['step1']['sex'];
      }
      
      break;

    case 2:

      // Задаём форму для второга шага.
      $form['step2'] = array(
        '#type' => 'fieldset', 
        '#title' => t('Шаг второй.'),
      );

      $default_value = empty($form_state['values']['step2']['color']) ? '' : $form_state['values']['step2']['color'];
      $form['step2']['color'] = array(
        '#type' => 'textfield', 
        '#title' => 'Укажите ваш любимый цвет', 
        '#default_value' => $default_value, 
        '#required' => TRUE,
      );

      $default_value = empty($form_state['values']['step2']['kino']) ? '' : $form_state['values']['step2']['kino'];
      $form['step2']['kino'] = array(
        '#type' => 'textfield', 
        '#title' => 'Ваше любимый фильм про Чак Норриса:', 
        '#default_value' => $default_value
      );
    
      break;

    case 3:

    // Задаём форму для третьего шага.    
      $form['step3'] = array(
        '#type' => 'fieldset', 
        '#title' => 'А есть ещё фильмы про Чак Норриса ? ',
      );

      $form['step3']['film'] = array(
        '#type' => 'checkboxes', 
        '#title' => '',
        '#options' => drupal_map_assoc(array('Да', 'Да, конечно', 'Нет', 'Люблю фильмы про Ван Дама')),
        '#required' => TRUE,
      );
      if (isset($form_state['values']['step3']['film'])) {
        $form['step3']['film']['#default_value'] = $form_state['values']['step3']['film'];
      }

      break;
  }
  
  // После того, как создали форму, надо позаботиться о том, чтобы
  // пользователь видел правильные кнопки. В зависимости от текущего шага,
  // будут отображаться кнопки "Следующий шаг", "Предыдущий шаг" и "Хватит".
  
  // Создаём обёртку для кнопок. 
  $form['actions'] = array('#type' => 'actions');
  
  // Если мы на последнем шаге - то показываем кнопку "Хватит".
  if ($step == 3) {
    $form['actions']['submit'] = array(
      '#type' => 'submit', 
      '#value' => 'Хватит',
    );
  }

  // Если мы не достигли последнего шага, то у нас обязательно
  // будет присутствовать кнопка "Следующий шаг".
  if ($step < 3) {
    $form['actions']['next'] = array(
      '#type' => 'submit', 
      '#value' => 'Следующий шаг', 
      // На кнопку  ajax-обработчик, который будет возвращать форму
      // в ранее созданный <div id="multistep-example-form-wrapper"></div>
      '#ajax' => array(
        'wrapper' => 'multistep-example-form-wrapper', 
        'callback' => 'multistep_example_ajax_callback',
      ),
    );
  }

  // Если мы ушли с первого шага, то покажем кнопку "Предыдущий шаг".
  if ($step > 1) {
    $form['actions']['prev'] = array(
      '#type' => 'submit', 
      '#value' => 'Предыдущий шаг',       
      '#limit_validation_errors' => array(), // не проверяет форму если нажат предыидуший шаг
      '#submit' => array('multistep_example_form_submit'), 
      '#ajax' => array(
        'wrapper' => 'multistep-example-form-wrapper', 
        'callback' => 'multistep_example_ajax_callback',
      ),
    );
  }

  //  показываем пользователю форму.
  return $form;
}

function multistep_example_ajax_callback($form, $form_state) {
  return $form;
}

function multistep_example_form_submit($form, &$form_state) {

  // Сохраняем состояние формы, полученное при переходе на новый шаг.
  $current_step = 'step' . $form_state['storage']['step'];
  if (!empty($form_state['values'][$current_step])) {
    $form_state['storage']['values'][$current_step] = $form_state['values'][$current_step];
  }

  // Если перешли на следующий шаг - то увеличиваем счётчик шагов.
  if (isset($form['actions']['next']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['next']['#value']) {
    $form_state['storage']['step']++;
  
    // Если данные для следующего шага были уже введены пользователем,
    // то восстанавливаем их и передаём в форму.
    $step_name = 'step' . $form_state['storage']['step'];
    if (!empty($form_state['storage']['values'][$step_name])) {
      $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
    }
  }
  
  // Если вернулись на шаг назад - уменьшаем счётчик шагов.
  if (isset($form['actions']['prev']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['prev']['#value']) {
    $form_state['storage']['step']--;
  
    // Забираем из хранилища данные по предыдущему шагу и возвращаем их в форму.
    $step_name = 'step' . $form_state['storage']['step'];
    $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
  }

  // Если пользователь прошёл все шаги и нажал на кнопку "Хватит",
  // то обрабатываем полученные данные со всех шагов.
  if (isset($form['actions']['submit']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['submit']['#value']) {

    //  сообщение отправляем на почту 
	$from = 'admin@example.com';
	$to = 'yuriy.ipcom@gmail.com'; //кому отправляем указывать здесь пока что 
    $message = 'Введённые данные: <br/>';  
    foreach ($form_state['storage']['values'] as $step => $values) {
      $message .= "<br/>$step: <br/>";
      foreach ($values as $key => $value) {
        $output = '';
        if (is_array($value)) {
          foreach ($value as $val) {
            $output .= $val ? $val . '; ' : '';
          }
          $value = implode(', ', $value);
        }
        else {
          $output = $value;
        }
        $message .= "$key = $output<br/>";
      }
      
    }
      if (drupal_mail('multistep_example_form',$to, language_default(), $message, $from, TRUE))
    {
        drupal_set_message('Спасибо письмо отправлено');     
    } else {
        drupal_set_message('Ошибочка , попробуйте ещё раз');
    }
	  
    $form_state['rebuild'] = FALSE;
    return;
  }

  // Указываем, что форма должна быть построена заново.
  $form_state['rebuild'] = TRUE;
}

