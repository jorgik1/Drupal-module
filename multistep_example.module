<?php
/*hook menu
*/
function multistep_example_menu() { 
  $items = array(); 
  $items['multistep_example'] = array(
    'title' => 'Multistep ajax form ',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multistep_example_form'),
    'access callback' => TRUE,
  );
  return $items;
}


/*hook menu admin 
*/
function multistep_example_admin_menu(){ 
  $items = array();
  $items['admin/config/system/item'] = array(
    'title' => 'Multistep_example module settings', 
    'description' => 'Here you need to write your e-mail address to send a message with answers', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('multistep_example_admin_form_menu'), 
    'access arguments' => array('administer site configuration'), 
    'type' => MENU_NORMAL_ITEM, 
   ); 
  return $items; 
}
/*form to add
*E-mail */
function multistep_example_admin_form_menu($form, &$form_state){
  $form = array();
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => '',
    '#size' => '20',
    '#attributes' =>array('placeholder' => t('E-mail address'))
  );
$form['actions']['submit']= array(
      '#type' => 'submit', 
      '#value' => 'Save e-mail',       
      '#limit_validation_errors' => array(), 
      '#submit' => array('multistep_example_form'));
$form_state['storage'] = $form['email'];
	
  return $form;
}

/** function submit and mail
 * @param $form
 * @param $form_state
 */
function multistep_example_admin_form_submit($form, &$form_state) {
	global $message;
  $email_content =  $message;
  $from = 'yuriy.ipcom@gmail.com';
  $params = array('body' => $email_content);
  $key = 'test_email';
  $to = $form_state['storage'];
  if (drupal_mail('multistep_example_form', $key, $to, language_default(), $params, $from)) {
    drupal_set_message("Email send");
  }else {
    drupal_set_message("Email not send");
  }
}
function test_mail($key, &$message, $params) {
  $language = $message['language'];
  switch ($key) {
    case 'test_email':
      $message['subject'] = t('Test Email');
      $message['body'][] = $params['body'];
      break;
  }
}
/*Generate form*/
/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function multistep_example_form($form, &$form_state) {
  $form['#prefix'] = '<div id="multistep-example-form-wrapper">';
  $form['#suffix'] = '</div>';
  $form['#tree'] = TRUE;
  $step = empty($form_state['storage']['step']) ? 1 : $form_state['storage']['step'];
  $form_state['storage']['step'] = $step;
  switch ($step) {
    case 1:    
      $form['step1'] = array(
        '#type' => 'fieldset', 
        '#title' => 'Choose your age and gender.',
      );  
      $form['step1']['age'] = array(
        '#type' => 'select', 
        '#title' => 'Choose your age', 
        '#options' => drupal_map_assoc(array('10-25', '26-50', '51-76', '77-500')),
        '#field_suffix' => 'year',
      );   
      if (isset($form_state['values']['step1']['age'])) {
        $form['step1']['age']['#default_value'] = $form_state['values']['step1']['age'];
      }   
      $form['step1']['sex'] = array(
        '#type' => 'select', 
        '#title' => 'what is your gender:', 
        '#options' => drupal_map_assoc(array('Undefined', 'Male', 'Female')),
      );
      if (isset($form_state['values']['step1']['sex'])) {
        $form['step1']['sex']['#default_value'] = $form_state['values']['step1']['sex'];
      }
      break;
    case 2:
      $form['step2'] = array(
        '#type' => 'fieldset', 
        '#title' => t('Next step.'),
      );
      $default_value = empty($form_state['values']['step2']['color']) ? '' : $form_state['values']['step2']['color'];
      $form['step2']['color'] = array(
        '#type' => 'textfield', 
        '#title' => 'Write your favorite color', 
        '#default_value' => $default_value, 
        '#required' => TRUE,
      );
      $default_value = empty($form_state['values']['step2']['kino']) ? '' : $form_state['values']['step2']['kino'];
      $form['step2']['kino'] = array(
        '#type' => 'textfield', 
        '#title' => 'Write the name of your favorite movie with Chuck Norris:', 
        '#default_value' => $default_value
      );
      break;
    case 3:
      $form['step3'] = array(
        '#type' => 'fieldset', 
        '#title' => 'Last question,are there any movies with Chuck Norris?',
      );
      $form['step3']['film'] = array(
        '#type' => 'checkboxes', 
        '#title' => '',
        '#options' => drupal_map_assoc(array('I do not know who is Chuck Norris', 'Yes of course', 'No', 'I prefer movies with Van Dam')),
        '#required' => TRUE,
      );
      if (isset($form_state['values']['step3']['film'])) {
        $form['step3']['film']['#default_value'] = $form_state['values']['step3']['film'];
      }
      break;
  }  
     
     $form['actions'] = array('#type' => 'actions');
  if ($step == 3) {
    $form['actions']['submit'] = array(
      '#type' => 'submit', 
      '#value' => 'Send e-mail',
    );
	 /*Add one more submit email form*/
    $form['#submit'][] = 'multistep_example_admin_form_submit';
  
  }

  if ($step < 3) {
    $form['actions']['next'] = array(
      '#type' => 'submit', 
      '#value' => 'Next', 
      '#ajax' => array(
        'wrapper' => 'multistep-example-form-wrapper', 
        'callback' => 'multistep_example_ajax_callback',
      ),
    );
  }
  if ($step > 1) {
    $form['actions']['prev'] = array(
      '#type' => 'submit', 
      '#value' => 'Back',       
      '#limit_validation_errors' => array(), // не проверяет форму если нажат предыидуший шаг
      '#submit' => array('multistep_example_form_submit'), 
      '#ajax' => array(
        'wrapper' => 'multistep-example-form-wrapper', 
        'callback' => 'multistep_example_ajax_callback',
      ),
    );
  }
  return $form;
}

function multistep_example_ajax_callback($form, $form_state) {
  return $form;
}

function multistep_example_form_submit($form, &$form_state) {

/*Save form*/
  $current_step = 'step' . $form_state['storage']['step'];
  if (!empty($form_state['values'][$current_step])) {
    $form_state['storage']['values'][$current_step] = $form_state['values'][$current_step];
  }

  /*Count*/
  if (isset($form['actions']['next']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['next']['#value']) {
    $form_state['storage']['step']++;
  
    $step_name = 'step' . $form_state['storage']['step'];
    if (!empty($form_state['storage']['values'][$step_name])) {
      $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
    }
  }
   /*Count back*/
  if (isset($form['actions']['prev']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['prev']['#value']) {
    $form_state['storage']['step']--;
 
    $step_name = 'step' . $form_state['storage']['step'];
    $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
  }
 /*Processing form */
  if (isset($form['actions']['submit']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['submit']['#value']) {
    $message = 'Введённые данные: <br/>';  
    foreach ($form_state['storage']['values'] as $step => $values) {
      $message .= "<br/>$step: <br/>";
      foreach ($values as $key => $value) {
        $output = '';
        if (is_array($value)) {
          foreach ($value as $val) {
            $output .= $val ? $val . '; ' : '';
          }
          $value = implode(', ', $value);
        }
        else {
          $output = $value;
        }
        $message .= "$key = $output<br/>";
      }
	  }

    
    $form_state['rebuild'] = FALSE;
    return;
  }

   /*Rebuild form*/
  $form_state['rebuild'] = TRUE;
}

